//[[NEWCODE:hyunsook.park by updated]] - Chang from module.exports() to module.exports.init().
module.exports.init = function( grunt ) {
	"use strict";

	var fs = require( "fs" ),
		path = require( "path" ),
		crypto = require( "crypto" ),
		wordpress = require( "../wordpress" ), //[[NEWCODE:hyunsook.park by updated]] - Add to access to all functions of the wordpress module(wordpress.js).
		async = grunt.util.async,
		// support: node <0.8
		existsSync = fs.existsSync || path.existsSync,
		exports = {}; //[[NEWCODE:hyunsook.park by updated]] - Add in order to chang from module.exports() to module.exports.init().

	function createChecksum( str ) {
		var md5 = crypto.createHash( "md5" );
		md5.update( str, "utf8" );
		return md5.digest( "hex" );
	}

	//[[OLDCODE:hyunsook.park by updated]] - Change from grunt.registerHelper( "wordpress-get-resources", ...) to exports.wordpress_get_resources().
	//grunt.registerHelper( "wordpress-get-resources", function( fn ) {
	exports.wordpress_get_resources = function( fn ) {
		//[[OLDCODE:hyunsook.park by updated]] - Use wordpress.wordpress_client() instead of grunt.helper( "wordpress-client" ).
		//var client = grunt.helper( "wordpress-client" );
		var client = wordpress.wordpress_client( grunt );
		grunt.verbose.write( "Getting resources from WordPress..." );
		client.call( "gw.getResources", function( error, resources ) {
			if ( error ) {
				grunt.verbose.error();
				grunt.verbose.or.error( "Error getting resources from WordPress." );
				return fn( error );
			}

			grunt.verbose.ok();
			grunt.verbose.writeln();
			fn( null, resources );
		});
	},

	//[[OLDCODE:hyunsook.park by updated]] - Change from grunt.registerHelper( "wordpress-publish-resource", ...) to exports.wordpress_publish_resource().
	//grunt.registerHelper( "wordpress-publish-resource", function( filepath, content, fn ) {
	exports.wordpress_publish_resource = function( filepath, content, fn ) {
		//[[OLDCODE:hyunsook.park by updated]] - Use wordpress.wordpress_client() instead of grunt.helper( "wordpress-client" ).
		//var client = grunt.helper( "wordpress-client" );
		var client = wordpress.wordpress_client( grunt );
		grunt.verbose.write( "Publishing " + filepath + "..." );
		client.authenticatedCall( "gw.addResource", filepath, content, function( error, checksum ) {
			if ( error ) {
				grunt.verbose.error();
				grunt.verbose.or.error( "Error publishing " + filepath + "." );
				return fn( error );
			}

			grunt.verbose.ok();
			grunt.verbose.or.writeln( "Published " + filepath + "." );
			fn( null, checksum );
		});
	},

	//[[OLDCODE:hyunsook.park by updated]] - Change from grunt.registerHelper( "wordpress-delete-resource", ...) to exports.wordpress_delete_resource().
	//grunt.registerHelper( "wordpress-delete-resource", function( filepath, fn ) {
	exports.wordpress_delete_resource = function( filepath, fn ) {
		//[[OLDCODE:hyunsook.park by updated]] - Use wordpress.wordpress_client() instead of grunt.helper( "wordpress-client" )
		//var client = grunt.helper( "wordpress-client" );
		var client = wordpress.wordpress_client( grunt );

		grunt.verbose.write( "Deleting " + filepath + "..." );
		client.authenticatedCall( "gw.deleteResource", filepath, function( error, checksum ) {
			if ( error ) {
				grunt.verbose.error();
				grunt.verbose.or.error( "Error deleting " + filepath + "." );
				return fn( error );
			}

			grunt.verbose.ok();
			grunt.verbose.or.writeln( "Deleted " + filepath + "." );
			fn( null, checksum );
		});
	},

	//[[OLDCODE:hyunsook.park by updated]] - Change from grunt.registerHelper( "wordpress-sync-resources", ...) to exports.wordpress_sync_resources().
	//grunt.registerHelper( "wordpress-sync-resources", function( dir, fn ) {
	exports.wordpress_sync_resources = function( dir, fn ) {
		grunt.verbose.writeln( "Synchronizing resources.".bold );

		// Check if there are any resources to process
		if ( !existsSync( dir ) ) {
			grunt.verbose.writeln( "No resources to process." );
			grunt.verbose.writeln();
			return fn( null );
		}

		async.waterfall([
			function getResources( fn ) {
				//[[OLDCODE:hyunsook.park by updated]] - Use wordpress.wordpress_client() instead of grunt.helper( "wordpress-get-resources", ... ).
				//grunt.helper( "wordpress-get-resources", fn );
				exports.wordpress_get_resources( fn );
			},

			function publishResources( resources, fn ) {
				grunt.verbose.writeln( "Processing resources.".bold );
				//[[OLDCODE:hyunsook.park by updated]] - Use wordpress.wordpress_client() instead of grunt.helper( "wordpress-recurse", ... ).
				//grunt.helper( "wordpress-recurse", dir, function( file, fn ) {
				wordpress.wordpress_recurse( grunt, dir, function( file, fn ) {
					var resource = file.substr( dir.length, file.length - dir.length ),
						//[[OLDCODE:hyunsook.park by updated]] - Use fs.readFileSync() instead because it is occured a error on toString( "base64" ) for image files.
						//content = grunt.file.read( file, "base64" ).toString( "base64" ),
						content = fs.readFileSync( file, "base64" ),
						checksum = createChecksum( content );
//console.log( "##--->1--resource: " + resource);
//console.log( "##--->1-resource in resources: " + resource in resources);
//console.log( "##--->2--" + checksum + " / " + resources[ resource ]);
//console.log( "##--->3--file: " + file);
//console.log( "##--->4--file-grunt.file.read-base64: " + grunt.file.read( file, "base64" ));
//console.log( "##--->5--file-grunt.file.read-base64.toString: " + grunt.file.read( file, "base64" ).toString( "base64" ));
//console.log( "##--->99--: " + fs.readFileSync( file, "base64" ));

					// Already exists, no need to update
					if ( resource in resources && checksum === resources[ resource ] ) {
						grunt.verbose.writeln( "Skiping " + resource + "; already up-to-date." );
						delete resources[ resource ];
						return fn( null );
					}

					//[[OLDCODE:hyunsook.park by updated]] - Use wordpress.wordpress_client() instead of grunt.helper( "wordpress-publish-resource", ... ).
					//grunt.helper( "wordpress-publish-resource", resource, content, function( error ) {
					exports.wordpress_publish_resource( resource, content, function( error ) {
						if ( error ) {
							return fn( error );
						}

						delete resources[ resource ];
						fn( null );
					});
				}, function( error ) {
					if ( error ) {
						return fn( error );
					}

					grunt.verbose.writeln();
					fn( null, resources );
				});
			},

			function deleteResources( resources, fn ) {
				grunt.verbose.writeln( "Deleting old resources.".bold );
				async.forEachSeries( Object.keys( resources ), function( resourcePath, fn ) {
					//[[OLDCODE:hyunsook.park by updated]] - Use wordpress.wordpress_delete_resource() instead of grunt.helper( "wordpress-delete-resource", ... ).
					//grunt.helper( "wordpress-delete-resource", resourcePath, fn );
					exports.wordpress_delete_resource( resourcePath, fn );
				}, function( error ) {
					if ( error ) {
						return fn( error );
					}

					grunt.verbose.writeln();
					fn( null );
				});
			}
		], fn );
	};

	return exports;
};
